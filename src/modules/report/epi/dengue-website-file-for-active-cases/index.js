import React, { useState, useEffect, useRef } from 'react';

import { withRouter } from 'react-router-dom';
import { connect } from 'react-redux';
import Header from 'components/ui/header';
import NavBar from 'components/layout/navbar';
import NewBreadCrumb from 'components/ui/breadcrumb';
import Footer from 'components/ui/footer';
import { byteArrayToBase64, autoGenerateDownloadLink, actionTryCatchCreator } from 'utils';
import InPageLoading from 'components/common/inPageLoading';
import CheckForEncryption from 'modules/checkForEncryption';

import { generateEPIFileActiveCasesService } from 'services/report/epi';
import { WEB_ROUTES, FUNCTION_NAMES } from 'constants/index';

const DengueFileForActiveCases = () => {
  const [isLoading, setLocalLoading] = useState(false);
  const passwordModalRef = useRef(null);

  useEffect(() => {
    document.title = `NEA | ${WEB_ROUTES.REPORT.DENGUE_WEBSITE_FILE_FOR_ACTIVE_CASES.name}`;
  }, []);

  const onSearch = (password) => {
    const onPending = () => setLocalLoading(true);
    const onSuccess = (data) => {
      const { extension, mimeType, reportData } = data;
      autoGenerateDownloadLink(`${WEB_ROUTES.REPORT.DENGUE_WEBSITE_FILE_FOR_ACTIVE_CASES.name}.${extension}`, mimeType, byteArrayToBase64(reportData));
      setLocalLoading(false);
    };
    const onError = (error) => {
      setLocalLoading(false);
    };
    return actionTryCatchCreator(generateEPIFileActiveCasesService({ password }), onPending, onSuccess, onError);
  };

  return (
    <>
      <Header />
      <div className="main-content">
        <NavBar active={WEB_ROUTES.REPORT.DENGUE_WEBSITE_FILE_FOR_ACTIVE_CASES.name} />
        <div className="contentWrapper">
          <NewBreadCrumb page={[WEB_ROUTES.REPORT, WEB_ROUTES.REPORT.DENGUE_WEBSITE_FILE_FOR_ACTIVE_CASES]} />
          <div className="main-title">
            <h1>{WEB_ROUTES.REPORT.DENGUE_WEBSITE_FILE_FOR_ACTIVE_CASES.name}</h1>
          </div>
          <div className="block-summary filterMainWrapper tabsContainer" style={{ padding: '30px' }}>
            <div className="d-flex">
              <button type="submit" className="btn btn-pri" onClick={passwordModalRef?.current?.showPasswordModal}>
                Generate
              </button>
            </div>
          </div>
          <InPageLoading isLoading={isLoading} />
          <Footer />
          <CheckForEncryption functionName={FUNCTION_NAMES.generateEPIFileActiveCases} ref={passwordModalRef} onGenerate={onSearch} />
        </div>
      </div>
    </>
  );
};

const mapStateToProps = ({ global }, ownProps) => ({
  ...ownProps,
  masterCodes: global.data.masterCodes,
});

const mapDispatchToProps = {};

export default connect(mapStateToProps, mapDispatchToProps)(withRouter(DengueFileForActiveCases));
