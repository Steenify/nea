import React, { useState, useEffect, useRef } from 'react';

import { withRouter } from 'react-router-dom';
import { connect } from 'react-redux';
import Header from 'components/ui/header';
import NavBar from 'components/layout/navbar';
import NewBreadCrumb from 'components/ui/breadcrumb';
import Footer from 'components/ui/footer';
import { byteArrayToBase64, autoGenerateDownloadLink, actionTryCatchCreator } from 'utils';
import InPageLoading from 'components/common/inPageLoading';
import Select from 'components/common/select';
import CheckForEncryption from 'modules/checkForEncryption';

import { generateEHIAuditShowCauseService } from 'services/report/gravitrap-ehi-audit';
import { WEB_ROUTES, weekNumberLOVs, yearNumberLOVs, FUNCTION_NAMES } from 'constants/index';

const CompareContractorEHI = () => {
  const thisYear = yearNumberLOVs[yearNumberLOVs.length - 1];

  const [eweekFrom, setEweekFrom] = useState(weekNumberLOVs[0]);
  const [eyearFrom, setEyearFrom] = useState(thisYear);
  const [eweekTo, setEweekTo] = useState(weekNumberLOVs[weekNumberLOVs.length - 1]);
  const [eyearTo, setEyearTo] = useState(thisYear);
  const [taskId, setTaskId] = useState('');

  const [isLoading, setLocalLoading] = useState(false);
  const passwordModalRef = useRef(null);

  useEffect(() => {
    document.title = `NEA | ${WEB_ROUTES.REPORT.EHI_AUDIT_SHOW_CAUSE_REPORT.name}`;
  }, []);

  const onSearch = (password) => {
    const reportParameters = [
      { name: 'eYear_eWeekFrom', value: `${eyearFrom.value}_${eweekFrom.value}` },
      { name: 'eYear_eWeekTo', value: `${eyearTo.value}_${eweekTo.value}` },
      { name: 'Task_ID', value: taskId },
    ];

    const onPending = () => {
      setLocalLoading(true);
    };
    const onSuccess = (data) => {
      const { extension, mimeType, reportData } = data;
      autoGenerateDownloadLink(`${WEB_ROUTES.REPORT.EHI_AUDIT_SHOW_CAUSE_REPORT.name}.${extension}`, mimeType, byteArrayToBase64(reportData));
      setLocalLoading(false);
    };
    const onError = (error) => {
      setLocalLoading(false);
    };
    return actionTryCatchCreator(generateEHIAuditShowCauseService({ reportParameters, password }), onPending, onSuccess, onError);
  };

  return (
    <>
      <Header />
      <div className="main-content">
        <NavBar active={WEB_ROUTES.REPORT.EHI_AUDIT_SHOW_CAUSE_REPORT.name} />
        <div className="contentWrapper">
          <NewBreadCrumb page={[WEB_ROUTES.REPORT, WEB_ROUTES.REPORT.EHI_AUDIT_SHOW_CAUSE_REPORT]} />
          <div className="main-title">
            <h1>{WEB_ROUTES.REPORT.EHI_AUDIT_SHOW_CAUSE_REPORT.name}</h1>
          </div>
          <div className="paddingLeft30">
            <h2>Selection Criteria</h2>
          </div>
          <div className="block-summary filterMainWrapper tabsContainer" style={{ padding: '30px' }}>
            <div className="tab-pane__group bg-white">
              <div className="card">
                <div className="d-flex align-items-center mb-4 rptDetailsCont">
                  <b className="text-body wf-200">EWeek - EYear From</b>
                  <Select className="m-1 wf-150" options={weekNumberLOVs} value={eweekFrom} onChange={setEweekFrom} />
                  <Select className="m-1 wf-150" options={yearNumberLOVs} value={eyearFrom} onChange={setEyearFrom} />
                </div>
                <div className="d-flex align-items-center mb-4 rptDetailsCont">
                  <b className="text-body wf-200">EWeek - EYear To</b>
                  <Select className="m-1 wf-150" options={weekNumberLOVs} value={eweekTo} onChange={setEweekTo} />
                  <Select className="m-1 wf-150" options={yearNumberLOVs} value={eyearTo} onChange={setEyearTo} />
                </div>
                <div className="form-inline mb-4">
                  <div className="form-group form-group__stacked mb-4">
                    <b className="text-body wf-200">Task ID</b>
                    <input className="textfield" onChange={(e) => setTaskId(e.target.value)} />
                  </div>
                </div>
              </div>
            </div>

            <div className="d-flex">
              <button type="submit" className="btn btn-pri" onClick={passwordModalRef?.current?.showPasswordModal}>
                Generate
              </button>
            </div>
          </div>
          <InPageLoading isLoading={isLoading} />
          <Footer />
          <CheckForEncryption functionName={FUNCTION_NAMES.generateEHIAuditShowCause} ref={passwordModalRef} onGenerate={onSearch} />
        </div>
      </div>
    </>
  );
};

const mapStateToProps = ({ global }, ownProps) => ({
  ...ownProps,
  masterCodes: global.data.masterCodes,
});

const mapDispatchToProps = {};

export default connect(mapStateToProps, mapDispatchToProps)(withRouter(CompareContractorEHI));
