import React, { useState } from 'react';
import { ErrorMessage } from 'formik';
import { withRouter } from 'react-router-dom';

import { WEB_ROUTES, MASTER_CODE } from 'constants/index';
import ValidationField from 'components/common/formik/validationField';
import FilePreviewModal from 'components/common/file-review-modal';

import { loiPreviewService, loiDownloadService } from 'services/inspection-management/letter-of-intent';
import { actionTryCatchCreator, byteArrayToBase64, autoGenerateDownloadLink } from 'utils';

import { Form3Mode } from '../helper';

const Form3EnforcementTab = (props) => {
  const { masterCodes, history, enforcement, mode, form3Id, canCreateLOI } = props;
  const isLOIavailable = enforcement?.loiType;

  const [previewModalState, setPreviewModalState] = useState({ isOpen: false, file: null });

  const goToLOI = () => {
    history.push(`${WEB_ROUTES.DETAILS.url}/loi`, { id: form3Id, canCreateLOI });
  };

  const downloadLOI = async (loiReferenceNo) => {
    const onPending = () => {};
    const onSuccess = (data) => {
      const base64 = byteArrayToBase64(data?.loiVO?.loiFile || []);
      autoGenerateDownloadLink(`${loiReferenceNo}.pdf`, 'application/pdf', base64);
    };
    const onError = () => {};
    await actionTryCatchCreator(loiDownloadService({ loiReferenceNo }), onPending, onSuccess, onError);
  };

  const previewLOI = async (loiReferenceNo) => {
    const onPending = () => {};
    const onSuccess = (data) => {
      const base64 = byteArrayToBase64(data?.loiVO?.loiFile || []);
      setPreviewModalState({ isOpen: true, file: base64 });
    };
    const onError = () => {};
    await actionTryCatchCreator(loiPreviewService({ loiReferenceNo }), onPending, onSuccess, onError);
  };

  return (
    <div className="mb-4 bg-white">
      <p className="tab-pane__title text-bold text-white">Letter of Intent</p>
      <div className="card">
        <div className="card-body">
          {!isLOIavailable && canCreateLOI && (
            <div className="row mb-5">
              <div className="col-4 col-lg-2 d-flex align-items-center">
                <label className="col-form-label font-weight-bold">Create Letter of Intent</label>
              </div>
              <div className="col-8 col-lg-10">
                <button type="button" className="btn btn-sec m-2" onClick={goToLOI}>
                  Create LOI
                </button>
              </div>
            </div>
          )}
          {isLOIavailable && (
            <div className="row">
              <div className="col-3">
                <div className="label-group mb-4">
                  <p className="col-form-label font-weight-bold">Type of LOI</p>
                  <p className="col-form-label">{enforcement?.loiType}</p>
                </div>
              </div>
              <div className="col-3">
                <div className="label-group mb-4">
                  <p className="col-form-label font-weight-bold">Saved as at</p>
                  <p className="col-form-label">
                    {enforcement?.loiSubmittedDate} {enforcement?.loiSubmittedTime}
                  </p>
                  <span className="col-form-label text-blue cursor-pointer p-0" onClick={() => previewLOI(enforcement?.loiReferenceNo)}>
                    Preview
                  </span>
                </div>
              </div>
              <div className="col-3">
                <div className="label-group mb-4">
                  <p className="col-form-label font-weight-bold">LOI Status</p>
                  <p className="col-form-label">{enforcement?.loiStatus}</p>
                </div>
              </div>
              <div className="col-3">
                {enforcement?.loiStatus && enforcement?.loiStatus !== 'Pending Approval' && (
                  <button type="button" className="btn btn-sec m-1" onClick={() => downloadLOI(enforcement?.loiReferenceNo)}>
                    Download
                  </button>
                )}
                <button type="button" className="btn btn-sec m-1" onClick={goToLOI}>
                  View All LOIs
                </button>
              </div>
            </div>
          )}
          {mode === Form3Mode.view && (
            <>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender ID Type</label>
                </div>
                <div className="col-8 col-lg-10">{enforcement?.offenderIdType}</div>
              </div>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender ID</label>
                </div>
                <div className="col-8 col-lg-10">{enforcement?.offenderId}</div>
              </div>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender Name</label>
                </div>
                <div className="col-8 col-lg-10">{enforcement?.offenceCode}</div>
              </div>
            </>
          )}
          {mode === Form3Mode.enforce && (
            <>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender ID Type</label>
                </div>
                <div className="col-8 col-lg-10">
                  <ValidationField
                    inputComponent="react-select"
                    name="enforcement.offenderIdType"
                    errorClassName="d-inline-block"
                    selectClassName="d-inline-block m-2 wf-400"
                    options={masterCodes[MASTER_CODE.OFFENDER_ID_TYPE]}
                  />
                </div>
              </div>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender ID</label>
                </div>
                <div className="col-8 col-lg-10">
                  <ValidationField name="enforcement.offenderId" inputClassName="textfield d-inline-block m-2 wf-400" errorClassName="d-inline-block" />
                </div>
              </div>
              <div className="row">
                <div className="col-4 col-lg-2 d-flex align-items-center">
                  <label className="col-form-label font-weight-bold">Offender Name</label>
                </div>
                <div className="col-8 col-lg-10">
                  <ValidationField name="enforcement.offenceCode" inputClassName="textfield d-inline-block m-2 wf-400" placeholder="" errorClassName="d-inline-block" />
                </div>
              </div>
              <>
                <h1 className="font-weight-bold mb-2 mt-5">
                  Proceed with enforcement in EEMS2?
                  <ErrorMessage name="enforcement.isEnforcementToEEMS2" className="col-form-error-label m-1" component="span" />
                </h1>
                <div className="custom-radio paddingBottom5">
                  <ValidationField type="radio" id="YES" name="enforcement.isEnforcementToEEMS2" value hideError />
                  <label className="form-label" htmlFor="YES">
                    Yes (goes to EEMS2)
                  </label>
                </div>
                <div className="custom-radio paddingBottom5">
                  <ValidationField type="radio" id="NO" name="enforcement.isEnforcementToEEMS2" value={false} hideError />
                  <label className="form-label" htmlFor="NO">
                    No (goes to Manager for approval)
                  </label>
                </div>
              </>
              {isLOIavailable && <></>}
            </>
          )}
        </div>
      </div>
      <FilePreviewModal isOpen={previewModalState.isOpen} file={previewModalState.file} onCancel={() => setPreviewModalState({ isOpen: false, file: null })} />
    </div>
  );
};

export default withRouter(Form3EnforcementTab);
